<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="Like">
   <!-- MyBatis ${필드명} 맵핑이 먼저 이루어진다 #{필드명} 맵핑이 나중에 이루어진다 쿼리를 콘솔에서 보면 $가 붙은건 
      ? 가 아니라 실제 값으로 보여요 #이 붙은거는 ? 로 보인다 나중에 실제 값하고 결합한다 #붙은건 데이터 타입에 따라서 자동으로 
      '를 붙여준다 $는 그냥 그 위치에 문자열을 내보낼 뿐이라서 '가 필요하면 직접 붙여줘야 한다 $는 데이터를 문자열을 줘도 그대로 
      옮겨놓는다 테이블명이나 필드명이 추가되거나 할때는 ${필드명} 또는 ${테이블명} -->
   <select id="Like.getView" parameterType="String"
      resultType="LikeDto">
   
		
    select  (select count(like_type) 
   			 from tl_like 
   			 where like_type = 1 and target_id=#{target_id} and delyn='N') as "like"
           ,(select count(like_type)
            from tl_like 
            where like_type = 2 and target_id=#{target_id} and delyn='N')  as "dislike"
           
    from dual
		   
   </select>
   <!-- PreparedStatement 사용하면서 파라미터를 ?로 했는데 이게 mybatis는 #{변수명} 으로 대체 #{pg} 
      parameterType에 반드시 pg 라는 변수가 있어야 한다 그래서 getPg 라는 함수를 호출해서 값을 읽어와 끼워넣기 한다 
      디비에서 데이타를 가져와서 select 쿼리가 데이타를 보낼때는 resultType에서 지정한 클래스 안에 각 필드들에 대한 변수가 
      모두 있어야 한다. set변수명을 다 일일이 호출해서 데이터 넣어서 객체만들고 그 객체를 리스트에 저장해서 보낸다 -->

   <insert id="Like.insert" parameterType="LikeDto">
      <!-- select 쿼리를 먼저 진행하도록 resultType 반환이 Integer타입 keyProperty 결과 받을 변수 
         order 진행순서 BEFORE 를 쓰면 먼저 진행된다 -->
      <selectKey resultType="String" keyProperty="like_seq"
         order="BEFORE">
         select nvl(max(like_seq),0)+1 as like_seq
         from tl_like
      </selectKey>
      insert into tl_like(
      	like_seq,
      	userid,
      	like_type,
      	target_id,
      	datetime,
      	ip_addr,
      	delyn
      ) values (
        #{like_seq},
        #{userid},
        #{like_type},
        #{target_id},
        sysdate,
        #{ip_addr},
        'N'
      )
   </insert>

   <select id="Like.getTotalCount" parameterType="LikeDto"
      resultType="Integer">
      
	select count(*) as isUpdate 
	from tl_like 
	  <if test="sel!=null">
		<if test="sel.equals('getUserTotal')">	   
		  where	userid = #{userid} and target_id = #{target_id}
		</if>
	   <if test="sel.equals('getTotalCount')">
          where delyn = 'N'
       </if>
	  </if>
   </select>

   <update id="Like.update" parameterType="LikeDto">
	 <![CDATA[  
		update tl_like 
		 set   like_type = #{like_type}
		       ,datetime = sysdate
		       ,ip_addr = #{ip_addr}
		       ,delyn = case when #{like_type} = (
		       										select like_Type 
		       										from tl_like 
		       										where userid = #{userid} 
		       											  and target_id=#{target_id}
		       									    	  and delyn='N'
		       									  ) then 'Y'
		            	when #{like_type} =       (
		            		 						select like_Type 
		            		 						from tl_like 
		            		 						where userid = #{userid}
		            		 						 	  and target_id=#{target_id}
		            		 							  and delyn='Y'
		            		 					  ) then 'N'
		           		else 'N'
		            	end    
		where userid = #{userid} and target_id=#{target_id}
    ]]>                
 </update>



	<!-- 삭제용 -->
	<update id="Like.delete" parameterType="LikeDto">
		update	tl_question_answer
		set delyn='Y'
		where qna_seq=#{qna_seq}
	</update>
	
	

	<select id="Like.getUserid" parameterType="String"
		resultType="String">
		select
			userid from tl_question_answer
			where qna_seq=#{qna_seq}
	</select>

</mapper>